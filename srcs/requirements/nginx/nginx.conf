events {
        worker_connections 768;
        # multi_accept on;
}

http {
        server {
                listen 443 ssl;
                listen [::]:443 ssl;

                server_name yilin.42.fr;

                #ssl certificate & ssl certificate key -> store them in proper path
                ssl_certificate /etc/nginx/ssl/inception.crt;
                ssl_certificate_key /etc/nginx/ssl/inception.key;

                #acceptable protocols
                #default: # Dropping SSLv3, ref: POODLE #TLSv1 TLSv1.1 => only keep 1.2 & 1.3 as subject asks
                ssl_protocols TLSv1.2 TLSv1.3;

                #root  -> Specifies the base folder Nginx should look into to serve files
                #index -> Defines the default file(s) to return when the user visits /
                root /var/www/html;
                index index.html index.php index.nginx-debian.html;

                #Main Request Handler
                #This is essential for PHP frameworks and WordPress, which route everything through index.php
                location / {
                        try_files $uri $uri/ /index.php$is_args$args;
                }

                # location ~ \.php$ {
                #         fastcgi_split_path_info ^(.+\.php)(/.+)$;
                #         fastcgi_pass wordpress:9000;
                #         fastcgi_index index.php;
                #         include fastcgi_params;
                #         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                #         fastcgi_param SCRIPT_NAME $fastcgi_script_name;
                # }

                        
        }

}


#default config file existing in the docker after default nginx install -> /etc/nginx/nginx.conf
# **************************************************************************** #
#                               DEFAULT FILE                                   #
# **************************************************************************** #

#user www-data;
# worker_processes auto;
# pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf;

# events {
#         worker_connections 768;
#         # multi_accept on;
# }

# http {
#         ################
#         # Basic Settings
#         ################

#         sendfile on;
#         tcp_nopush on;
#         types_hash_max_size 2048;
#         # server_tokens off;

#         # server_names_hash_bucket_size 64;
#         # server_name_in_redirect off;

#         include /etc/nginx/mime.types;
#         default_type application/octet-stream;

#         ##############
#         # SSL Settings
#         ##############

#         ssl_protocols TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE #TLSv1 TLSv1.1 -> only keep 1.2 & 1.3
#         ssl_prefer_server_ciphers on;

#         ##################
#         # Logging Settings
#         ##################

#         # access_log /var/log/nginx/access.log;
#         # error_log /var/log/nginx/error.log;

#         ###############
#         # Gzip Settings
#         ###############

#         # gzip on;

#         # gzip_vary on;
#         # gzip_proxied any;
#         # gzip_comp_level 6;
#         # gzip_buffers 16 8k;
#         # gzip_http_version 1.1;
#         # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

#         ######################
#         # Virtual Host Configs
#         ######################

#         # include /etc/nginx/conf.d/*.conf;
#         # include /etc/nginx/sites-enabled/*;
# }


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}

# **************************************************************************** #
#                                  NOTES                                       #
# **************************************************************************** #

# listen 443 ssl; → Listens on all IPv4 addresses
# listen [::]:443 ssl; → Listens on all IPv6 addresses
# => This allows Docker’s port forwarding from the host to reach Nginx inside the container

# :: is the IPv6 version of 0.0.0.0 — meaning “all interfaces”

# ssl_certificate: Path to your public SSL certificate (.crt)
# ssl_certificate_key: Path to your private SSL key (.key)
# These are used to encrypt HTTPS traffic.
# Without these, Nginx cannot serve HTTPS.

# /etc : Stores configuration files for system-wide settings and services.
# /etc/nginx/ : Is the default configuration directory for Nginx.
# -> Keep your SSL cert organized / config paths predictable / standard practice for Linux-based servers

# ssl_protocols TLSv1.2 TLSv1.3; 
# -> TLSv1.2 and TLSv1.3 are secure and modern.
# -> Older ones like SSLv3 or TLSv1.0 are disabled for security.


# /var : Stores log files
# /var/www/html -> not required; Linux convention
# -> can change to "root /my/project/site;"

# index index.html index.php index.nginx-debian.html;
# -> If someone visits just /, check these files in order, and serve the first one that exists => order MATTER!
# -> Nginx serves: → index.html first → If missing, then index.php → If both missing, then index.nginx-debian.html
# -> Required to specify all three. You can specify only the one(s) your site actually uses.

#try_files $uri $uri/ /index.php$is_args$args;
# $uri → The requested URL path
# $uri/ → Directory version (for folders)
# $is_args$args → Appends query strings (?id=123 etc.)
# Try the following in order:
# 1. Does the exact file exist? ($uri)
# 2. Does a folder exist? ($uri/)
# 3. If not, forward to index.php, passing URL parameters.

